{
    "identifier": "function_15",
    "description": "Vectorized equivalent of finding the minimum value in each column of a matrix.",
    "prompts": [
        {
            "prompt_id": "brief_prompt",
            "prompt": "Create the function's vectorized equivalent using NumPy.",
            "input_code": "def function_15(A):\n    result = [float('inf')] * len(A[0])\n    for j in range(len(A[0])):\n        for i in range(len(A)):\n            if A[i][j] < result[j]:\n                result[j] = A[i][j]\n    return result\n"
        }
    ],
    "function_prototype": {
        "function_name": "function_15",
        "parameters": [
            {
                "name": "A",
                "type": "np.ndarray"
            }
        ],
        "return_values": [
            {
                "type": "np.ndarray"
            }
        ]
    },
    "tags": [
        "Array",
        "Minimum Value",
        "Vectorization"
    ]
}
